View(gpd_uni)
# Create a new column for assessment year by extracting DueDate's year
gpd_uni <- gpd_uni %>%
mutate(AssmntYr = case_when(str_sub(DueDate, 1, 4) == '2022' ~ '2021-22',
str_sub(DueDate, 1, 4) == '2021' ~ '2020-21',
str_sub(DueDate, 1, 4) == '2020' ~ '2019-20',
str_sub(DueDate, 1, 4) == '2019' ~ '2018-19',
str_sub(DueDate, 1, 4) == '2018' ~ '2017-18'))
View(gpd_uni)
View(gpd_uni)
# -------*--------
# Contingency Table - how many universities have provided data each year, for
# both ‘pre-92’ and ‘post-92’ institutions
gpd_cont <- gpd_uni %>%
group_by(AssmntYr, pre92) %>%
summarise("UniCount" = n()) %>%
arrange(desc(AssmntYr), desc(pre92))
# -------*--------
# Contingency Table - how many universities have provided data each year, for
# both ‘pre-92’ and ‘post-92’ institutions
(gpd_cont <- gpd_uni %>%
group_by(AssmntYr, pre92) %>%
summarise("UniCount" = n()) %>%
arrange(desc(AssmntYr), desc(pre92)))
# Create a new column for assessment year by extracting DueDate's year
gpd_uni <- gpd_uni %>%
mutate(AssmntYr = case_when(str_sub(DueDate, 1, 4) == '2022' ~ '2021/22',
str_sub(DueDate, 1, 4) == '2021' ~ '2020/21',
str_sub(DueDate, 1, 4) == '2020' ~ '2019/20',
str_sub(DueDate, 1, 4) == '2019' ~ '2018/19',
str_sub(DueDate, 1, 4) == '2018' ~ '2017/18'))
# -------*--------
# No. of observations each year
(count(pgd_uni['Year']))
# -------*--------
# No. of observations each year
(count(gpd_uni['Year']))
# -------*--------
# No. of observations each year
(count(gpd_uni['AssmntYear']))
# -------*--------
# No. of observations each year
(count(gpd_uni['AssmntYr']))
gdp_uni %>%
count(AssmntYr)
gpd_uni %>%
count(AssmntYr)
# -------*--------
# 2nd part of the hw
# Shows the trend for the Difference in Mean Hourly Rates from 2017-18 to 2021-22
# split by Pre and Post '92 unis as well as the rate of change from Y1 to Y5
payGapData %>%
group_by(EmployerSize, pre92, year) %>%
summarize(mean_diffhrlypct = mean(DiffMeanHourlyPercent)) %>%
pivot_wider(names_from = year,
values_from = mean_diffhrlypct) %>%
mutate(ChgPct18to22 = (`2017/18`-`2021/22`)/`2017/18`*100)
# Join the universities data. Use inner join to drop any rows not in Uni
# Remove the EmployerName from GPD data as it is available in uni data
payGapData <- gpd %>%
select(-EmployerName) %>%
inner_join(uni, by =c("EmployerId"))
# Create a new column for assessment year by extracting DueDate's year
payGapData <- payGapData %>%
mutate(year = case_when(str_sub(DueDate, 1, 4) == '2022' ~ '2021/22',
str_sub(DueDate, 1, 4) == '2021' ~ '2020/21',
str_sub(DueDate, 1, 4) == '2020' ~ '2019/20',
str_sub(DueDate, 1, 4) == '2019' ~ '2018/19',
str_sub(DueDate, 1, 4) == '2018' ~ '2017/18'))
# -------*--------
# No. of observations each year
payGapData %>%
count(year)
# -------*--------
# 2nd part of the hw
# Shows the trend for the Difference in Mean Hourly Rates from 2017-18 to 2021-22
# split by Pre and Post '92 unis as well as the rate of change from Y1 to Y5
payGapData %>%
group_by(EmployerSize, pre92, year) %>%
summarize(mean_diffhrlypct = mean(DiffMeanHourlyPercent)) %>%
pivot_wider(names_from = year,
values_from = mean_diffhrlypct) %>%
mutate(ChgPct18to22 = (`2017/18`-`2021/22`)/`2017/18`*100)
# -------*--------
# Contingency Table - how many universities have provided data each year, for
# both ‘pre-92’ and ‘post-92’ institutions
(gpd_cont <- payGapData %>%
group_by(year, pre92) %>%
summarise("UniCount" = n()) %>%
arrange(desc(year), desc(pre92)))
# First group by EmployerName and AssmntYr to get a df with a summary view of
# the data
# Then perform a pivot_wider to convert the data to a single row per Uni and the
# AssmntYear as columns
# Post this remove any rows which ahve NA, i.e any uni which has not submitted
# data for all 5 years
all_yr_uni <- payGapData %>%
group_by(EmployerName, year) %>%
summarise("UniCount" = n()) %>%
arrange(EmployerName, desc(year)) %>%
pivot_wider(names_from = year,
values_from = UniCount) %>%
na.omit()
# Finally print the EmployerName for list of Unis which have 5 year data
print(all_yr_uni[, c("EmployerName"), drop=FALSE], n=100)
payGapData %>%
select(EmployerName, year, DiffMedianHourlyPercent) %>%
pivot_wider(names_from = year,
values_from = DiffMedianHourlyPercent) %>%
na.omit()
## Compute mean of DiffMedianHourlyPercent for each year
payGapData %>%
group_by(year) %>%
summarise(meanGap = mean(DiffMedianHourlyPercent))
payGapData %>%
group_by(year, pre92) %>%
summarise(meanGap = mean(DiffMedianHourlyPercent), .groups = "drop") %>%
pivot_wider(names_from = pre92, values_from = meanGap)
# First group by EmployerName and AssmntYr to get a df with a summary view of
# the data
# Then perform a pivot_wider to convert the data to a single row per Uni and the
# AssmntYear as columns
# Post this remove any rows which ahve NA, i.e any uni which has not submitted
# data for all 5 years
all_yr_uni <- payGapData %>%
group_by(EmployerName, year) %>%
summarise("UniCount" = n()) %>%
arrange(EmployerName, desc(year)) %>%
pivot_wider(names_from = year,
values_from = UniCount) %>%
na.omit()
# Finally print the EmployerName for list of Unis which have 5 year data
print(all_yr_uni[, c("EmployerName"), drop=FALSE], n=100)
payGapData %>%
group_by(year, pre92) %>%
summarise(meanGap = mean(DiffMedianHourlyPercent), .groups = "drop") %>%
pivot_wider(names_from = pre92, values_from = meanGap)
# Load the data ----
library(tidyverse)
pay17 <- read_csv("data/UK Gender Pay Gap Data - 2017 to 2018.csv")
pay18 <- read_csv("data/UK Gender Pay Gap Data - 2018 to 2019.csv")
pay19 <- read_csv("data/UK Gender Pay Gap Data - 2019 to 2020.csv")
pay20 <- read_csv("data/UK Gender Pay Gap Data - 2020 to 2021.csv")
pay21 <- read_csv("data/UK Gender Pay Gap Data - 2021 to 2022.csv")
universities <- read_csv("data/universities.csv")
# Join with the university data and combine ----
# For each pay gap dataset, will add the year,
# and *discard* the EmployerName column
# This ensures EmployerName is drawn from the universities
# data frame only
pay17year <- pay17 %>%
mutate(year = "2017/18") %>%
select(-EmployerName) %>%
inner_join(universities, by = "EmployerId")
pay18year <- pay18 %>%
mutate(year = "2018/19") %>%
select(-EmployerName) %>%
inner_join(universities, by = "EmployerId")
pay19year <- pay19 %>%
mutate(year = "2019/20") %>%
select(-EmployerName) %>%
inner_join(universities, by = "EmployerId")
pay20year <- pay20 %>%
mutate(year = "2020/21") %>%
select(-EmployerName) %>%
inner_join(universities, by = "EmployerId")
pay21year <- pay21 %>%
mutate(year = "2021/22") %>%
select(-EmployerName) %>%
inner_join(universities, by = "EmployerId")
payGapData <- rbind(pay17year, pay18year,
pay19year, pay20year,
pay21year)
payGapData %>%
count(year)
# -------*--------
# No. of observations each year
payGapData %>%
count(year)
# Shows the trend for the Difference in Mean Hourly Rates from 2017-18 to 2021-22
# split by Pre and Post '92 unis as well as the rate of change from Y1 to Y5
payGapData %>%
group_by(EmployerSize, pre92, year) %>%
summarize(mean_diffhrlypct = mean(DiffMeanHourlyPercent)) %>%
pivot_wider(names_from = year,
values_from = mean_diffhrlypct) %>%
mutate(ChgPct18to22 = (`2017/18`-`2021/22`)/`2017/18`*100)
# -------*--------
# Combine data
# Combine gpd
gpd <- rbind(gpd_2122, gpd_2021, gpd_1920, gpd_1819, gpd_1718)
# -------*--------
# Load libraries
library(tidyverse)
# -------*--------
# Import data
gpd_2122 <- read_csv("data/UK Gender Pay Gap Data - 2021 to 2022.csv")
gpd_2021 <- read_csv("data/UK Gender Pay Gap Data - 2020 to 2021.csv")
gpd_1920 <- read_csv("data/UK Gender Pay Gap Data - 2019 to 2020.csv")
gpd_1819 <- read_csv("data/UK Gender Pay Gap Data - 2018 to 2019.csv")
gpd_1718 <- read_csv("data/UK Gender Pay Gap Data - 2017 to 2018.csv")
uni <- read_csv("data/universities.csv")
# -------*--------
# Combine data
# Combine gpd
gpd <- rbind(gpd_2122, gpd_2021, gpd_1920, gpd_1819, gpd_1718)
# Join the universities data. Use inner join to drop any rows not in Uni
# Remove the EmployerName from GPD data as it is available in uni data
payGapData <- gpd %>%
select(-EmployerName) %>%
inner_join(uni, by =c("EmployerId"))
# Create a new column for assessment year by extracting DueDate's year
payGapData <- payGapData %>%
mutate(year = case_when(str_sub(DueDate, 1, 4) == '2022' ~ '2021/22',
str_sub(DueDate, 1, 4) == '2021' ~ '2020/21',
str_sub(DueDate, 1, 4) == '2020' ~ '2019/20',
str_sub(DueDate, 1, 4) == '2019' ~ '2018/19',
str_sub(DueDate, 1, 4) == '2018' ~ '2017/18'))
View(payGapData)
View(payGapData)
# Shows the trend for the Difference in Mean Hourly Rates from 2017-18 to 2021-22
# split by Pre and Post '92 unis as well as the rate of change from Y1 to Y5
payGapData %>%
group_by(EmployerSize, pre92, year) %>%
summarize(mean_diffhrlypct = mean(DiffMeanHourlyPercent)) %>%
pivot_wider(names_from = year,
values_from = mean_diffhrlypct) %>%
mutate(ChgPct18to22 = (`2017/18`-`2021/22`)/`2017/18`*100)
byEmpyrSize <-
payGapData %>%
group_by(EmployerSize, pre92, year) %>%
summarize(mean_diffhrlypct = mean(DiffMeanHourlyPercent)) %>%
pivot_wider(names_from = year,
values_from = mean_diffhrlypct) %>%
byEmpyrSize <-
payGapData %>%
group_by(EmployerSize, pre92, year) %>%
summarize(mean_diffhrlypct = mean(DiffMeanHourlyPercent)) %>%
pivot_wider(names_from = year,
values_from = mean_diffhrlypct)
View(byEmpyrSize)
View(byEmpyrSize)
byEmpyrSize <-
payGapData %>%
group_by(EmployerSize, pre92, year) %>%
summarize(mean_diffhrlypct = mean(DiffMeanHourlyPercent))
View(byEmpyrSize)
View(byEmpyrSize)
View(byEmpyrSize)
View(byEmpyrSize)
byEmpyrSize92 <-
payGapData %>%
group_by(EmployerSize, year) %>%
summarize(mean_diffhrlypct = mean(DiffMeanHourlyPercent))
ggplot(data = byEmpyrSize, aes(x = gdp, y = score)) + # Create the plot
geom_point() # For a scatter plot
byEmpyrSize92 <-
payGapData %>%
group_by(EmployerSize, year)
byEmpyrSize <-
payGapData %>%
group_by(EmployerSize, year)
byEmpyrSize92 <-
payGapData %>%
group_by(EmployerSize, pre92, year) %>%
summarize(mean_diffhrlypct = mean(DiffMeanHourlyPercent)) %>%
pivot_wider(names_from = year,
values_from = mean_diffhrlypct)
View(byEmpyrSize92)
View(byEmpyrSize92)
View(byEmpyrSize)
View(byEmpyrSize)
byEmpyrSize <-
payGapData %>%
group_by(EmployerSize, year) %>%
summarize(mean_diffhrlypct = mean(DiffMeanHourlyPercent))
View(byEmpyrSize)
View(byEmpyrSize)
ggplot(data = byEmpyrSize, aes(x = EmployerSize, y = mean_diffhrlypct)) + # Create the plot
geom_point() # For a scatter plot
ggplot(data = byEmpyrSize, aes(y = EmployerSize, x = mean_diffhrlypct)) + # Create the plot
geom_point() # For a scatter plot
byEmpyrSize <-
payGapData %>%
group_by(EmployerSize, year) %>%
summarize(mean_diffhrlypct = mean(DiffMeanHourlyPercent)) %>%
na.omit()
ggplot(data = byEmpyrSize, aes(y = EmployerSize, x = mean_diffhrlypct)) + # Create the plot
geom_point() # For a scatter plot
View(byEmpyrSize)
View(byEmpyrSize)
View(payGapData)
View(payGapData)
payGapData %>%
select(DiffMeanHourlyPercent, MaleLowerQuartile, FemaleLowerQuartile)
payGapData %>%
select(DiffMeanHourlyPercent, MaleLowerQuartile, FemaleLowerQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Lower Quartile')
payGapData %>%
select(DiffMeanHourlyPercent, MaleLowerQuartile, FemaleLowerQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Lower Quartile') %>%
ggplot(aes(x = DiffMeanHourlyPercent, y = `Lower Quartile`)) + # Create the plot
geom_point()
payGapData %>%
select(DiffMeanHourlyPercent, MaleLowerQuartile, FemaleLowerQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Lower Quartile') %>%
ggplot(aes(x = DiffMeanHourlyPercent, y = `Lower Quartile`)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, MaleUpperQuartile, FemaleUpperQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Lower Quartile') %>%
ggplot(aes(x = DiffMeanHourlyPercent, y = `Lower Quartile`)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, MaleTopQuartile, FemaleTopQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Lower Quartile') %>%
ggplot(aes(x = DiffMeanHourlyPercent, y = `Lower Quartile`)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, MaleTopQuartile, FemaleTopQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Top Quartile') %>%
ggplot(aes(x = DiffMeanHourlyPercent, y = `Top Quartile`)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, MaleLowerMiddleQuartile, FemaleLowerMiddleQuartile 'F_lm') %>%
payGapData %>%
select(DiffMeanHourlyPercent, MaleLowerMiddleQuartile, FemaleLowerMiddleQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Lower Middle Quartile') %>%
ggplot(aes(x = DiffMeanHourlyPercent, y = `Lower Middle Quartile`)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, MaleUpperMiddleQuartile, FemaleUpperMiddleQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Upper Middle Quartile') %>%
ggplot(aes(x = DiffMeanHourlyPercent, y = `Upper Middle Quartile`)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, MaleTopQuartile, FemaleTopQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Top Quartile') %>%
ggplot(aes(x = DiffMeanHourlyPercent, y = `Top Quartile`)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, MaleLowerQuartile, FemaleLowerQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Lower Quartile') %>%
ggplot(aes(x = DiffMeanHourlyPercent, y = `Lower Quartile`)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, MaleLowerQuartile, FemaleLowerQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Lower Quartile') %>%
ggplot(aes(y = DiffMeanHourlyPercent, x = `Lower Quartile`)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, MaleUpperMiddleQuartile, FemaleUpperMiddleQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Upper Middle Quartile') %>%
ggplot(aes(y = DiffMeanHourlyPercent, x = `Upper Middle Quartile`)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, MaleTopQuartile, FemaleTopQuartile) %>%
pivot_longer(cols = -DiffMeanHourlyPercent,
names_to = 'M/F',
values_to = 'Top Quartile') %>%
ggplot(aes(y = DiffMeanHourlyPercent, x = `Top Quartile`)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, DiffMeanBonusPercent)
payGapData %>%
select(DiffMeanHourlyPercent, DiffMeanBonusPercent) %>%
na.omit() %>%
ggplot(aes(y = DiffMeanHourlyPercent, x = `Top Quartile`)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, DiffMeanBonusPercent) %>%
na.omit() %>%
ggplot(aes(y = DiffMeanHourlyPercent, x = DiffMeanBonusPercent)) +
geom_point(aes(colour = `M/F`))
payGapData %>%
select(DiffMeanHourlyPercent, DiffMeanBonusPercent) %>%
na.omit() %>%
ggplot(aes(y = DiffMeanHourlyPercent, x = DiffMeanBonusPercent)) +
geom_point()
payGapData %>%
group_by(EmployerSize, pre92, year) %>%
summarize(mean_diffhrlypct = mean(DiffMeanHourlyPercent)) %>%
pivot_wider(names_from = year,
values_from = mean_diffhrlypct) %>%
mutate(ChgPct18to22 = (`2017/18`-`2021/22`)/`2017/18`*100)
payGapData %>%
select(DiffMeanHourlyPercent, DiffMeanBonusPercent) %>%
filter(DiffMeanBonusPercent >= 100)
payGapData %>%
select(DiffMeanHourlyPercent, DiffMeanBonusPercent) %>%
filter(DiffMeanBonusPercent >= 100) %>%
na.omit() %>%
ggplot(aes(y = DiffMeanHourlyPercent, x = DiffMeanBonusPercent)) +
geom_point()
payGapData %>%
select(DiffMeanHourlyPercent, DiffMeanBonusPercent) %>%
filter(DiffMeanBonusPercent >= -100) %>%
na.omit() %>%
ggplot(aes(y = DiffMeanHourlyPercent, x = DiffMeanBonusPercent)) +
geom_point()
payGapData %>%
ggplot(aes(x = FemaleTopQuartile))
payGapData %>%
ggplot(aes(x = FemaleTopQuartile, y= FemaleTopQuartile))
payGapData %>%
ggplot(aes(x = FemaleTopQuartile, y= seq(1,00)))
payGapData %>%
ggplot(aes(x = FemaleTopQuartile, y= seq(1,100)))
payGapData %>%
ggplot(aes(x = FemaleTopQuartile, y= MaleTopQuartile))
payGapData %>%
ggplot(aes(x = FemaleTopQuartile, y= FemaleTopQuartile)) +
geom_point()
ggplot(aes(x = conv, y= FemaleTopQuartile)) +
geom_point()
payGapData %>%
mutate(conv = FemaleLowerQuartile * 25 / 100) %>%
ggplot(aes(x = conv, y= FemaleTopQuartile)) +
geom_point()
FemaleTopQuartile ~ (FemaleTopQuartile * 25 / 100) + 75) %>%
payGapData %>%
mutate(conv = case_when(FemaleLowerQuartile ~ FemaleLowerQuartile * 25 / 100,
FemaleLowerMiddleQuartile ~ (FemaleLowerMiddleQuartile * 25 / 100) + 25,
FemaleUpperMiddleQuartile ~ (FemaleUpperMiddleQuartile * 25 / 100) + 50,
FemaleTopQuartile ~ (FemaleTopQuartile * 25 / 100) + 75)) %>%
ggplot(aes(x = conv, y= FemaleTopQuartile)) +
geom_point()
(payGapData %>%
select(EmployerId, FemaleLowerQuartile, FemaleLowerMiddleQuartile, FemaleUpperMiddleQuartile, FemaleTopQuartile)
mutate(convFLQ = FemaleLowerQuartile * 25 / 100) %>%
(payGapData %>%
select(EmployerId, FemaleLowerQuartile, FemaleLowerMiddleQuartile, FemaleUpperMiddleQuartile, FemaleTopQuartile) %>%
mutate(convFLQ = FemaleLowerQuartile * 25 / 100) %>%
mutate(convFLMQ = (FemaleLowerMiddleQuartile * 25 / 100) + 25) %>%
mutate(convFUMQ = (FemaleUpperMiddleQuartile * 25 / 100) + 50) %>%
mutate(convFTQ = (FemaleTopQuartile * 25 / 100) + 75))
?pivot_longer
(payGapData %>%
select(EmployerId, FemaleLowerQuartile, FemaleLowerMiddleQuartile, FemaleUpperMiddleQuartile, FemaleTopQuartile) %>%
mutate(convFLQ = FemaleLowerQuartile * 25 / 100) %>%
mutate(convFLMQ = (FemaleLowerMiddleQuartile * 25 / 100) + 25) %>%
mutate(convFUMQ = (FemaleUpperMiddleQuartile * 25 / 100) + 50) %>%
mutate(convFTQ = (FemaleTopQuartile * 25 / 100) + 75)) %>%
pivot_longer(cols = -EmployerId, convFLQ, convFLMQ, convFUMQ, convFTQ,
names_to = "Original",
values_to = "O_val"))
(payGapData %>%
select(EmployerId, FemaleLowerQuartile, FemaleLowerMiddleQuartile, FemaleUpperMiddleQuartile, FemaleTopQuartile) %>%
mutate(convFLQ = FemaleLowerQuartile * 25 / 100) %>%
mutate(convFLMQ = (FemaleLowerMiddleQuartile * 25 / 100) + 25) %>%
mutate(convFUMQ = (FemaleUpperMiddleQuartile * 25 / 100) + 50) %>%
mutate(convFTQ = (FemaleTopQuartile * 25 / 100) + 75) %>%
pivot_longer(cols = -EmployerId, convFLQ, convFLMQ, convFUMQ, convFTQ,
names_to = "Original",
values_to = "O_val"))
(payGapData %>%
select(EmployerId, FemaleLowerQuartile, FemaleLowerMiddleQuartile, FemaleUpperMiddleQuartile, FemaleTopQuartile) %>%
mutate(convFLQ = FemaleLowerQuartile * 25 / 100) %>%
mutate(convFLMQ = (FemaleLowerMiddleQuartile * 25 / 100) + 25) %>%
mutate(convFUMQ = (FemaleUpperMiddleQuartile * 25 / 100) + 50) %>%
mutate(convFTQ = (FemaleTopQuartile * 25 / 100) + 75) %>%
pivot_longer(cols = -c(EmployerId, convFLQ, convFLMQ, convFUMQ, convFTQ),
names_to = "Original",
values_to = "O_val"))
(payGapData %>%
select(EmployerId, FemaleLowerQuartile, FemaleLowerMiddleQuartile, FemaleUpperMiddleQuartile, FemaleTopQuartile) %>%
mutate(convFLQ = FemaleLowerQuartile * 25 / 100) %>%
mutate(convFLMQ = (FemaleLowerMiddleQuartile * 25 / 100) + 25) %>%
mutate(convFUMQ = (FemaleUpperMiddleQuartile * 25 / 100) + 50) %>%
mutate(convFTQ = (FemaleTopQuartile * 25 / 100) + 75) %>%
pivot_longer(cols = -c(EmployerId, convFLQ, convFLMQ, convFUMQ, convFTQ),
names_to = "Original",
values_to = "O_val") %>%
pivot_longer(cols = -c(EmployerId),
names_to = "Conv",
values_to = "C_val"))
(payGapData %>%
select(EmployerId, FemaleLowerQuartile, FemaleLowerMiddleQuartile, FemaleUpperMiddleQuartile, FemaleTopQuartile) %>%
mutate(convFLQ = FemaleLowerQuartile * 25 / 100) %>%
mutate(convFLMQ = (FemaleLowerMiddleQuartile * 25 / 100) + 25) %>%
mutate(convFUMQ = (FemaleUpperMiddleQuartile * 25 / 100) + 50) %>%
mutate(convFTQ = (FemaleTopQuartile * 25 / 100) + 75) %>%
pivot_longer(cols = -c(EmployerId, convFLQ, convFLMQ, convFUMQ, convFTQ),
names_to = "Original",
values_to = "O_val") %>%
pivot_longer(cols = -c(EmployerId, Original, O_val),
names_to = "Conv",
values_to = "C_val"))
